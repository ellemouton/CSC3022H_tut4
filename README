Name: Elle Mouton
Student Number: MTNELL004
CSC3022H (CSC3023F) Tutorial 4
________________________________________________________________________________________
CONTENT:
1. How to compile and run the program
2. How to compile and run the unit tests
3. Description of each of the files used in the program
________________________________________________________________________________________

1. Compiling and running the program:

To compile the files, navigate into the project folder and type 'make' in the terminal.
To run the program, use tho following command:

	./imageops -<option> <inputFile1>.pgm <inputfile2>.pgm <OutputFileName>

	for example for operations involving 2 images:

		 ./imageops -a shrek_rectangular.pgm donkey_mask.pgm out

	or else, for operations involving 1 images:

		./imageops -i shrek_rectangular.pgm out

	for filtering operations:

		./imageops -f <inputFile1>.pgm <filter_file>.fir <OutputFileName>


	The output image will be written to <OutputFile>.pgm. Note that the ".pgm" extention must be specified for the input files but not for the output file name. The ".fir" extension must be specified for the name of the filter kernel when using the ilter function.

2. Compile and run the unit tests:

To compile the files, navigate into the project folder and type 'make test' in the terminal (a few warnings might appear but they are not errors). 
Then to run the unit tests, use the following command:

	./test


3. Description of each file

_______________
driver.cpp
---------------

This is the driver file of the program and thus contains the "main()" function. In the main function, the command line arguments are read in. A descision is made about which option the user has chosen and Image objects are created and manipulated accordingly.


_______________
imageops.h
---------------

This file contains all the method declarations associated with manipulating the Image and Image::iterator objects. This includes the constructors and destructors for each class as well as all the special member functions for each class. All the functions in this file are defined within the namespace: MTNELL004.

_____________
imageops.cpp
-------------

This file contains all the functions and class definitions that are declared in the imageops.h file. All the declarations are declared within the namespace: MTNELL004.

_____________
test.cpp
-------------

This file is the driver file for unit testing. It contains various tests that test each of the functions created in the imageops.cpp file by using a known input and known outputs to determine if the results of the program are in fact correct.
There are also unit tests to test each of the special member functions for both the Image and Image::iterator classes.

_________
Makefile:
----------

The Makefile contains various dependency rules required for compilation of both the program as well as the for the 'test' program. It also has a 'clean' rule.

